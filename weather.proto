syntax = "proto3";

// TimeSeriesData message
message TimeSeriesData {
    repeated string dates = 1;
    repeated float values = 2;
}

// ProphetParameters message
message ProphetParameters {
    float changepoint_prior_scale = 1;
    float seasonality_prior_scale = 2;
    float holidays_prior_scale = 3;
    string seasonality_mode = 4;
    bool yearly_seasonality = 5;
    bool weekly_seasonality = 6;
    bool daily_seasonality = 7;
    string growth = 8;
    float cap = 9;
    float floor = 10;
    int32 n_changepoints = 11;
    float changepoint_range = 12;
}

// ForecastRequest message
message ForecastRequest {
    TimeSeriesData data = 1;
    int32 periods = 2;
    ProphetParameters model_parameters = 3;
    bool return_components = 4;
}

// ComponentValues message
message ComponentValues {
    repeated float values = 1;
}

// ForecastResponse message
message ForecastResponse {
    repeated string forecast_dates = 1;
    repeated float forecast_values = 2;
    repeated float forecast_lower_bound = 3;
    repeated float forecast_upper_bound = 4;
    map<string, ComponentValues> components = 5;
}

// WeatherService definition
service WeatherService {
    rpc CreateForecast(ForecastRequest) returns (ForecastResponse);
}
